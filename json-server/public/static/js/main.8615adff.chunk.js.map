{"version":3,"sources":["reportWebVitals.js","components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/DirectoryComponent.js","components/HomeComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/CampsiteInfoComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/campsites.js","redux/comments.js","shared/partners.js","redux/partners.js","redux/forms.js","redux/promotions.js","App.js","redux/configureStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","this","setState","Fragment","Jumbotron","fluid","className","Navbar","dark","sticky","expand","NavbarBrand","href","src","height","width","alt","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","to","Button","outline","Modal","toggle","ModalHeader","ModalBody","Component","Footer","in","transformProps","exitTransform","role","Loading","baseUrl","RenderDirectoryItem","campsite","Card","id","CardImg","image","name","CardImgOverlay","CardTitle","Directory","directory","campsites","map","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderCard","item","CardBody","CardText","description","Home","campsitesLoading","campsitesErrMess","promotion","promotionLoading","promotionErrMess","partner","RenderPartner","Media","object","body","heading","About","partners","tag","CardHeader","title","list","required","val","length","maxLength","len","minLength","isNumber","isNaN","validEmail","test","Contact","firstName","lastName","phoneNum","email","agree","contactType","feedback","touched","handleSubmit","values","console","log","JSON","stringify","alert","resetFeedbackForm","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","component","messages","size","offset","check","checkbox","select","textarea","rows","type","color","CommentForm","rating","comment","modal_open","postComment","campsiteId","class","value","React","RenderCampsite","top","RenderComments","comments","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CampsiteInfo","ADD_COMMENT","CAMPSITES_LOADING","CAMPSITES_FAILED","ADD_CAMPSITES","ADD_COMMENTS","COMMENTS_FAILED","PROMOTIONS_LOADING","ADD_PROMOTIONS","PROMOTIONS_FAILED","ActionTypes","campsitesFailed","payload","addCampsites","commentsFailed","addComments","dispatch","newComment","toISOString","fetch","method","headers","response","ok","error","Error","status","statusText","json","catch","message","promotionsLoading","promotionsFailed","addPromotions","promotions","mapDispatchToProps","fetchCampsites","actions","reset","fetchComments","fetchPromotions","Main","TransitionGroup","CSSTransition","classNames","timeout","path","filter","featured","exact","render","match","params","commentsErrMess","location","key","withRouter","connect","Campsites","action","Comments","concat","PARTNERS","Partners","InitialFeedback","Promotions","store","createStore","combineReducers","createForms","feedbackForm","applyMiddleware","thunk","logger","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8615adff.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component }  from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n\n        \n        this.state = {\n          isNavOpen: false,\n          isModalOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n\n            <React.Fragment>\n                <Jumbotron fluid>\n                \n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h1>NuCamp</h1>\n                                <h2>a better way to camp</h2>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n\n                <Navbar dark sticky=\"top\" expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"/assets/images/logo.png\" height=\"30\" width=\"30\" alt=\"NuCamp Logo\" /></NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <i className=\"fa fa-home fa-lg\" /> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/directory\">\n                                        <i className=\"fa fa-list fa-lg\" /> Directory\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <i className=\"fa fa-info fa-lg\" /> About\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <i className=\"fa fa-address-card fa-lg\" /> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <span className=\"navbar-text ml-auto\">\n                                <Button outline onClick={this.toggleModal}>\n                                    <i className=\"fa fa-sign-in fa-lg\" /> Login\n                                </Button>\n                            </span>\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                    \n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FadeTransform } from 'react-animation-components';\nfunction Footer(props) {\n    return (\n        <FadeTransform\n            in\n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(50%)'\n            }}>\n        <footer className=\"site-footer\">\n            <div className=\"container\">\n                <div className=\"row\">             \n                    <div className=\"col-4 col-sm-2 offset-1\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/directory'>Directory</Link></li>\n                            <li><Link to='/aboutus'>About</Link></li>\n                            <li><Link to='/contactus'>Contact</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-6 col-sm-3 text-center\">\n                        <h5>Social</h5>\n                        <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\"><i className=\"fa fa-instagram\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\"><i className=\"fa fa-facebook\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\" /></a> \n                    </div>\n                    <div className=\"col-sm-4 text-center\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:notreal@notreal.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n        </FadeTransform>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\n// functional component with spinner icon \nexport const Loading = () => {\n    return (\n        <div className=\"col\">\n            <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\n            <p>Loading...</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';\n// configuration setting use in other parts of app\n// export constant and set it to network address \n// now we can use this constant wherever in our code we need the server address \n// if the server address changes then we just need to change it here \n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n// , onClick \nfunction RenderDirectoryItem({campsite}) {\n    return (\n        <Card>\n            <Link to={`/directory/${campsite.id}`}>\n            <CardImg width=\"100%\" src={baseUrl + campsite.image} alt={campsite.name} />\n                <CardImgOverlay>\n                    <CardTitle>{campsite.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nfunction Directory(props) {\n\n    const directory = props.campsites.campsites.map(campsite => {\n        return (\n            <div key={campsite.id} className=\"col-md-5 m-1\">\n                <RenderDirectoryItem campsite={campsite} />\n            </div>\n        );\n    });\n///Thunk: added isLoading and errMess \n    if (props.campsites.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.campsites.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.campsites.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Directory</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>Directory</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                {directory}\n            </div>\n        </div>\n    );\n}\n\nexport default Directory;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\n// THUNK: added isLoading and errMess \nfunction RenderCard({item, isLoading, errMess}) {\n\n    if (isLoading) {\n        return <Loading />;\n    }\n    if (errMess) {\n        return <h4>{errMess}</h4>;\n    }\n    return (\n        <FadeTransform\n            in\n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(50%)'\n            }}>\n            <Card>\n                <CardImg src={baseUrl + item.image} alt={item.name} />\n                <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    <CardText>{item.description}</CardText>\n                </CardBody>\n            </Card>\n        </FadeTransform>\n    );\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md m-1\">\n                    <RenderCard \n                    item={props.campsite} \n                    isLoading={props.campsitesLoading} \n                    errMess={props.campsitesErrMess}\n                    />\n                </div>\n                <div className=\"col-md m-1\">\n                    <RenderCard\n                            item={props.promotion}\n                            isLoading={props.promotionLoading}\n                            errMess={props.promotionErrMess}\n                        />\n                </div>\n                <div className=\"col-md m-1\">\n                    <RenderCard item={props.partner} />\n                </div>\n                \n            </div>\n        </div>\n    )\n} //Thunk added <rendercard prop.campsite campsites.Loading campaites.ErrMess \n\nexport default Home;   ","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction About(props) {\n\n    const partners = props.partners.map(partner => {\n        return (\n            <Media tag=\"li\" key={partner.id}>\n                <RenderPartner partner={partner} />\n            </Media>\n        );\n    });\n// <h5>{partner.name}</h5> dleted as per task 3 of page\n    return (\n        \n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>About Us</h2>\n                    <hr />\n                </div>\n            </div>\n            <Stagger in>\n            <Fade in key=\"col\">\n            <div className=\"row row-content\">\n            \n            \n                <div className=\"col-sm-6\">\n                    <h3>Our Mission</h3>\n                    <p>We present a curated database of the best campsites in the vast woods and backcountry of the World Wide Web Wilderness. We increase access to adventure for the public while promoting safe and respectful use of resources. The expert wilderness trekkers on our staff personally verify each campsite to make sure that they are up to our standards. We also present a platform for campers to share reviews on campsites they have visited with each other.</p>\n                </div>\n                \n               \n                <div className=\"col-sm-6\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\"><h3>Facts At a Glance</h3></CardHeader>\n                        \n                        <Fade in key=\"cole-6\">\n                            <dl className=\"row\">\n                                <dt className=\"col-6\">Founded</dt>\n                                <dd className=\"col-6\">February 3, 2016</dd>\n                                <dt className=\"col-6\">No. of Campsites in 2019</dt>\n                                <dd className=\"col-6\">563</dd>\n                                <dt className=\"col-6\">No. of Reviews in 2019</dt>\n                                <dd className=\"col-6\">4388</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">42</dd>\n                            </dl>\n                            </Fade>\n                        \n                    </Card>\n                    \n                </div> \n        \n                <div className=\"col\">\n                    <Card className=\"bg-light mt-3\">\n                   \n                        <CardBody>\n                           \n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">I will not follow where the path may lead, but I will go where there is no path, and I will leave a trail.</p>\n                                <footer className=\"blockquote-footer\">Muriel Strode,{' '}\n                                    <cite title=\"Source Title\">\"Wind-Wafted Wild Flowers\" -\n                                    The Open Court, 1903</cite>\n                                </footer>\n                            </blockquote>\n                            \n                        </CardBody>\n                        \n                    </Card>\n                </div>\n            </div>\n            \n            </Fade>\n            </Stagger>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>Community Partners</h3>\n                </div>\n                <div className=\"col mt-4\">\n                    <Media list>\n                        {partners}\n                    </Media>\n                    \n                </div>\n               \n            </div>\n            \n        </div>\n        \n    ); \n} // deconstruct property named partner from props object\nfunction RenderPartner({ partner }) {\n    if (partner) {\n        return (\n            <React.Fragment>\n               <Media object width=\"150\" src={partner.image} alt={partner.name}  />\n                    <Media body className=\"ml-5 mb-4\" >\n                        <Media heading>\n                            {partner.name}\n                        </Media>\n                            {partner.description}\n                    </Media>\n\n              \n            </React.Fragment>\n        );\n    }\n    return <div />;\n\n}\n\n\nexport default About;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\n// validation logic\n// requ value as argument => all form inputs = strings \n                 // if val was recieved && length of string is greater than 0 \nconst required = val => val && val.length;\n// wrapped func in func maxL value ret tru if max length is not exceeded otherws ret err\nconst maxLength = len => val => !val || (val.length <= len);\n// minL ret true if len ret tru if val and greater then minimum \nconst minLength = len => val => val && (val.length >= len);\n// checks if val is a number ret tru if Not not num then fals\nconst isNumber = val => !isNaN(+val);\n// Possible Regex for validation ----------------------------------------------\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n// class component \nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                \n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n    \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\nhandleSubmit(values) {\n    console.log('Current state is: ' + JSON.stringify(values));\n    alert('Current state is: ' + JSON.stringify(values));\n    this.props.resetFeedbackForm();\n}\n\n    render() {\n        \n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />   \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />   \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />   \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                     />   \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"6\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;\n// check stuff at 6:45 in video for odd changes to code \n// https://learn.nucamp.co/mod/book/view.php?id=3193&chapterid=3748\n// additional codepen controlled forms info\n// https://learn.nucamp.co/mod/book/view.php?id=3193&chapterid=3749","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Modal, Button, ModalBody, ModalHeader, Label, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { LocalForm, Control, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n//                      1. not undefined or null\n//                      2. Length is greater than zero\n//                      3. \nconst required = val => val && val.length;\n// wrapped func in func maxL value ret tru if max length is not exceeded otherws ret err\nconst maxLength = len => val => !val || (val.length <= len);\n// minL ret true if len ret tru if val and greater then minimum \nconst minLength = len => val => val && (val.length >= len);\n\n//////////////////////// MODAL ADDED ASSIGNMENT 4 ////////////////////////\n   // <CardTitle>{campsite.name}</CardTitle>\n   class CommentForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleModal = this.toggleModal.bind(this);     \n        this.state = {\n        \n          rating: '',\n          name: '',\n          comment: '',\n          touched: {\n            name: false             \n          },\n          modal_open: false \n\n          \n      };\n      \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n// Arrow functions? // \n// Redux Reducer: adding addComment action creator \n// will add an action using the values from this form\n// the action will get dispatched to it's reducer which will update its state \n\n// NOTE: Your values are different here than the video \nhandleSubmit(values) {\n    this.toggleModal();\n    this.props.postComment(this.props.campsiteId, values.rating, values.name, values.comment);\n}\n  //  console.log('Current state is: ' + JSON.stringify(values)); \n  //  alert('Current state is: ' + JSON.stringify(values));\n  // had to remember i didn't have the value of author or text but name and comment \n\n    \ntoggleModal = () => {\nthis.setState({\n    isModalOpen: !this.state.isModalOpen\n});\n}\n\n\n    render() {\n        \n        return (\n                <React.Fragment>\n                    <div className=\"container\">\n                        <Button outline type=\"submit\" onClick={this.toggleModal} >\n                        <i class=\"fa fa-pencil fa-lg\" />{' '}Submit Comment\n                        </Button>          \n                    </div>\n\n                    <Modal isOpen={this.state.isModalOpen} onClick={this.state.toggleModal}> \n                        <ModalBody>\n                            <ModalHeader toggle={this.toggleModal}>\n                            Submit comment\n                            </ModalHeader>\n                                    \n                                \n                            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            \n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"rating\" md={2}>Rating</Label>\n                                    \n                                        <Col md={10}>\n                                        \n                                            <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                                rows=\"6\"\n                                                className=\"form-control\">\n                                            <option value=\"1\">1</option>\n                                            <option value=\"2\">2</option>\n                                            <option value=\"3\">3</option>\n                                            <option value=\"4\">4</option>\n                                            <option value=\"5\">5</option>\n                                            </Control.select>   \n                                            \n                                        </Col>\n                                </div>   \n                                \n\n\n                                <div className=\"form-group\">\n                                \n                                    <Label htmlFor=\"name\" md={4}>Your Name</Label>\n                                        <Col md={10}>\n                                            \n                                            <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                                placeholder=\"Your Name\"\n                                                className=\"form-control\"\n                                                validators={{\n                                                    required,\n                                                    minLength: minLength(2),\n                                                    maxLength: maxLength(15)\n                                                }}\n                                            />\n                                            <Errors \n                                                className=\"text-danger\"\n                                                model=\".name\"\n                                                show=\"touched\"\n                                                component=\"div\"\n                                                messages={{\n                                                    required: 'Required',\n                                                    minLength: 'Must be at least 2 characters',\n                                                    maxLength: 'Must be 15 characters or less'\n                                                }}\n                                                />  \n                                            \n                                        </Col>\n                                </div>\n\n\n                                <div className=\"form-group\">\n                                \n                                    <Label htmlFor=\"comment\" md={2}>Comment</Label>\n                                    \n                                        <Col md={10}>\n                                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                                rows=\"6\"\n                                                className=\"form-control\"\n                                            />\n                                        </Col>\n                                </div>\n                                <div className=\"form-group\"> \n                                        <Col md={{size: 10, offset: 0}}>\n                                            <Button type=\"submit\" color=\"primary\" >\n                                            Submit\n                                            </Button>{' '}\n\n                                           \n                                        </Col>\n                                </div>\n                            </LocalForm>\n                        </ModalBody>\n                    </Modal>\n\n                </React.Fragment>        \n            );\n        }\n    }\n\n// added this.state.toggleModal \n// removed <Button outline type=\"submit\" onClick={this.toggleModal}  > Cancel </Button>\n// Fixed added <ModalHeader toggle={this.toggleModal}> Submit comment </ModalHeader>\n// from Header component \n\n////////////////////////////////////////// MODAL SECTION ////////////\n\n\n  function  RenderCampsite({campsite}) {\n        return (\n            <div className=\"col-md-5 m-1\">\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n                    <CardBody>\n                        <CardText>{campsite.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        </div>\n        );\n    }\n    // Redux actions Reducers: grabs props addComment and campsiteId \n    // then pass them to comment form component then pass them to <Commentform \n    function RenderComments({comments, postComment, campsiteId}) {\n        if (comments) { \n            return ( // using a full <p></p> is better than a self closing <p /> because we shouldn't use <br> or <p> to edit HTML \n            <div className=\"col-md-5 m-1\">\n            <h3>Comments:</h3>\n            <Stagger in>\n                    {\n                        comments.map(comment => {\n                            return (\n                                <Fade in key={comment.id}>\n                                    <div>\n                                        <p>\n                                            {comment.text}<br />\n                                            -- {comment.author}, \n                                            {new Intl.DateTimeFormat('en-US', { \n                                                year: 'numeric', \n                                                month: 'short', \n                                                day: '2-digit'})\n                                                .format(new Date(Date.parse(comment.date)))}\n                                        </p>\n                                    </div>\n                                </Fade>\n                            );\n                        })\n                    }\n                </Stagger>\n            <CommentForm campsiteId={campsiteId} postComment={postComment} />\n            </div>\n            )\n    \n           } return(<div />)\n\n    } \n  // thunk addition isLoading and errMess   \n    function CampsiteInfo(props) {\n        if (props.isLoading) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        if (props.errMess) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h4>{props.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        if (props.campsite) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Breadcrumb>\n                                <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                            </Breadcrumb>\n                            <h2>{props.campsite.name}</h2>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <RenderCampsite campsite={props.campsite} /> \n                        <RenderComments\n                        comments={props.comments}\n                        postComment={props.postComment}\n                        campsiteId={props.campsite.id}\n                    /> \n                   \n                    </div>\n                </div>\n            ); // The above have been changed to utilize the new funtional components created \n        }\n        return <div />;\n    }\n    \n    export default CampsiteInfo;\n\n   // Redux reducers ::\n   // campsiteInfo composnent recieving comments \n   // pass addComment along to RenderComments component \n   // and on to campsiteID \n   /* addComment={props.addComment}\n     campsiteId={props.campsite.id} */\n     // Then go to render comments components and use object restructuring \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// actiontypes.js and actionCreators.js  MADE \n// 1. only added one action type for now \n// this creates a variable ADD_COMMENT and sets it's vlue to a string 'ADD_COMMENT';\nexport const ADD_COMMENT = 'ADD_COMMENT';\n// Thunk: adding exports \n//loading is for when app is loading campsit data but hasn't recieved \nexport const CAMPSITES_LOADING = 'CAMPSITES_LOADING';\n// for when our server request has failed and can send an error message\nexport const CAMPSITES_FAILED = 'CAMPSITES_FAILED';\n// dispatched when campsite succesfully recieved from server and update the state\nexport const ADD_CAMPSITES = 'ADD_CAMPSITES';\n// THUNK: Now go to ActionCreators.js \n// added below for Fetch server \nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOTIONS_LOADING = 'PROMOTIONS_LOADING';\nexport const ADD_PROMOTIONS = 'ADD_PROMOTIONS';\nexport const PROMOTIONS_FAILED = 'PROMOTIONS_FAILED';\n// then add these to actionCreators as calls to fetch \n","//1. the * is a wildcard that lets us import all the action types from\n// './ActionTypes.js ' file at once // there's only one but we'll add more later\n// remeber start json // json-server -H 0.0.0.0 --watch db.json -p 3001 -d 2000\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n// 2. Define an action creator function with the name addComment \n// then pass in or = all values for comments (campsiteId, rating, author, and the campsite text)\n// then an arrow function to return an object with properties type and payload \n// type\" is ActionTypes.ADD_COMMENT ({ which lets us access the -- export const ADD_COMMENT = 'ADD_COMMENT'; }) \n// without defining it explicitly here in the * wildcard import\n// then the payload property is passed in \n// is the campsiteId: rating: author: text: \n//  IN ES6 when the identifier of a property is the same as it's value\n// you can use shorthand property names \n/*\npayload: {\ncampsiteId,\nrating,\nauthor,\ntext\n}\n*/\n// THUNK: objectve :: perform async requst so for now we will simulate \n//1 a delay with a settimeout function then add import campsites module for simulation \n// import { CAMPSITES } from '../shared/campsites';\n// then add an action creator creator fetchCampsites  \n \n// Redux Thunk syntax .. wrapping function in another function \n// that passes the stores dispatch method into the inner function \n// then use that to dispatch a different method campsitesLoading()\n// then use setTimeOut to set a delay of 2000 miliseconds \n// Then after that delay dispatch another action addCampsites \n// two arrows means we nested an arrow inside another arrow\nexport const fetchCampsites = () => dispatch => {\n\n    dispatch(campsitesLoading());\n    return fetch(baseUrl + 'campsites')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(campsites => dispatch(addCampsites(campsites)))\n        .catch(error => dispatch(campsitesFailed(error.message)));\n};\n\n// Thunk: above dispatch is used to dispatch a different action \n// next Action CREATOR will not use Thunk \n// campsitesLoading = () => \n// !!!only one arrow .. standard action creator that \n// returns an ACTION OBJECT and nothing else \n// This action has no payload only a type, non thunk \n// just goes straight to the reducer \n// this action CAMPSITES_LOADING was the one dispatched from FethchCampsites \n// so when fetch campsites action is dispatched that action dispatches this one \nexport const campsitesLoading = () => ({\n    type: ActionTypes.CAMPSITES_LOADING\n});\n// Thunk: Add another action creator for campsitesFailed and pass\n// an error message into it\n// type of campsitesFailed and pass errMess as a payload \nexport const campsitesFailed = errMess => ({\n    type: ActionTypes.CAMPSITES_FAILED,\n    payload: errMess\n});\n// Thunk: Another action creator with campsites perameter \n// a Normal action creator returning an object not a \n// function so no use of Thunk this will have campsites \n// argument passed in as array not payload \nexport const addCampsites = campsites => ({\n    type: ActionTypes.ADD_CAMPSITES,\n    payload: campsites\n});\n// Thunk: Next go to update campsites reducer \n\n// imported to MainComponent.js \n\n// add new action creator a thunk one \n\nexport const fetchComments = () => dispatch => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n// two more action creators for handling comments \n// normal action creators that return objects \n\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = comment => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n// fetch alterations made // https://learn.nucamp.co/mod/book/view.php?id=3233&chapterid=3773\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n    \n    const newComment = {\n        campsiteId: campsiteId,\n        rating: rating,\n        author: author,\n        text: text\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n            method: \"POST\",\n            body: JSON.stringify(newComment),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => { throw error; }\n        )\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('post comment', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message);\n        });\n};\n\n// next action creator will be for fetching promotions as THUNK \n// simliar to fetchCampsites then change campsites to promotions \nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n};\n\n// then can copy paste loading and failed action creators and add from campsites above \n// then changing to promotions \n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n});\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n});","import React, { Component } from 'react';\n//import { Navbar, NavbarBrand } from 'reactstrap';\n// REMOVED from App.js import './App.css';\nimport Header from './HeaderComponent'; // Notice <Header /> below\nimport Footer from './FooterComponent'; // notice <Footer /> below\nimport Directory from './DirectoryComponent'; \nimport Home from './HomeComponent';\nimport About from './AboutComponent';\nimport Contact from './ContactComponent';\nimport CampsiteInfo  from './CampsiteInfoComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { postComment, fetchCampsites, fetchComments, fetchPromotions } from '../redux/ActionCreators';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n        campsites: state.campsites,\n        comments: state.comments,\n        partners: state.partners,\n        promotions: state.promotions\n    }\n}\n// setup mapDispatchToProps set it up here (recommended as an object)\n// as a constant and give it one property for now addComment \n// addComment: the value of (campsiteId, rating, author, text)\n// then arrow function and in => (arrow functions body we'll add.. )\n// call the action creator addComment and pass in that data \n// FETCH added fetchComments: and fetchPromotions \nconst mapDispatchToProps = {\n    postComment: (campsiteId, rating, author, text) => (postComment(campsiteId, rating, author, text)),\n    fetchCampsites: () => (fetchCampsites()),\n    resetFeedbackForm: () => (actions.reset('feedbackForm')),\n    fetchComments: () => (fetchComments()),\n    fetchPromotions: () => (fetchPromotions())\n};\n// redux reducers ::\n// then go to bottom of file and add mapDispatchToProps object inside \n//the connect function as a second argument\n// export default withRouter(connect(mapStateToProps)(Main)); \n// becomes export default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n// adding mapDispatchToProps to connect function as second argument \n// makes addComment action creator function available inside the main component as a prop\n\n// Then in the render method of this Main component \n// where we render the campsiteInfo component we can pass \n// addComment function to it as a prop\n// redux reducers ::\nclass Main extends Component {\n      componentDidMount() {\n        this.props.fetchCampsites();\n        this.props.fetchComments();\n        this.props.fetchPromotions();\n\n    }\n// this is a lifecycle method render() componentDidUpdate() componenetWillUnmount() componentDidMount()\n// \n    render() {\n\n        const HomePage = () => {\n            return (\n                <Home\n                    campsite={this.props.campsites.campsites.filter(campsite => campsite.featured)[0]}\n                    campsitesLoading={this.props.campsites.isLoading}\n                    campsitesErrMess={this.props.campsites.errMess}\n                    promotion={this.props.promotions.promotions.filter(promotion => promotion.featured)[0]}\n                    promotionLoading={this.props.promotions.isLoading}\n                    promotionErrMess={this.props.promotions.errMess}\n                    partner={this.props.partners.filter(partner => partner.featured)[0]}\n                />\n            );\n        }\n\n    \n        const CampsiteWithId = ({match}) => {\n            return (\n                <CampsiteInfo \n                    campsite={this.props.campsites.campsites.filter(campsite => campsite.id === +match.params.campsiteId)[0]}\n                    isLoading={this.props.campsites.isLoading}\n                    errMess={this.props.campsites.errMess}\n                    comments={this.props.comments.comments.filter(comment => comment.campsiteId === +match.params.campsiteId)}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                /> \n            );\n        };\n// redux reducers ::Finally, update CampsiteInfoComponent.js as follows to \n// redux reducers :: initiate the action upon the user submitting the comment form:\n// animations stuff added \nreturn (\n            <div>\n                <Header />\n                        <TransitionGroup>\n                            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                                <Switch>\n                                    <Route path='/home' component={HomePage} />\n                                    <Route exact path='/directory' render={() => <Directory campsites={this.props.campsites} />} />\n                                    <Route path='/directory/:campsiteId' component={CampsiteWithId} />\n                                <Route exact path='/contactus' render={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} /> } />\n                                    <Route exact path='/aboutus' render={() => <About partners={this.props.partners} /> } />\n                                    <Redirect to='/home' />\n                                </Switch>\n                            </CSSTransition>\n                        </TransitionGroup>\n                        <Footer />\n            </div>\n        );\n    }\n}\n/* \nreturn (\n            <div>\n                <Header />\n                <Switch>\n                    <Route path='/home' component={HomePage} />\n                    <Route exact path='/directory' render={() => <Directory campsites={this.props.campsites} />} />\n                    <Route path='/directory/:campsiteId' component={CampsiteWithId} />\n                    <Route exact path='/contactus' render={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\n                    <Route exact path='/aboutus' render={() => <About partners={this.props.partners} /> } />\n                    <Redirect to='/home' />\n                </Switch>\n                <Footer />\n            </div>\n        );\n    }\n}\n*/\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n// adding mapDispatchToProps to connect function as second argument \n// makes addComment action creator function available inside the main component as a prop\n//export default withRouter(connect(mapStateToProps)(Main));\n\n  /* old page  \n  class Main extends Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                campsites: CAMPSITES,\n                comments: COMMENTS,\n                partners: PARTNERS,\n                promotions: PROMOTIONS\n            };\n        }\n\n    render() {\n\n        const HomePage = () => {\n            return (\n                <Home\n                    campsite={this.state.campsites.filter(campsite => campsite.featured)[0]}\n                    promotion={this.state.promotions.filter(promotion => promotion.featured)[0]}\n                    partner={this.state.partners.filter(partner => partner.featured)[0]}\n                />\n            );\n        };\n        const CampsiteWithId = ({match}) => {\n            return (\n                <CampsiteInfo \n                    campsite={this.state.campsites.filter(campsite => campsite.id === +match.params.campsiteId)[0]}\n                    comments={this.state.comments.filter(comment => comment.campsiteId === +match.params.campsiteId)}\n                />\n            );\n        };  \n\n    \n//               <Route path='/about' component={AboutUs} /> \n        return (\n            <div>\n                <Header />\n                <Switch>\n                    <Route path='/directory/:campsiteId' component={CampsiteWithId} />\n                    <Route exact path='/contactus' component={Contact} />\n                    <Route path='/home' component={HomePage} />\n                    <Route path='/aboutus' render={() => <About partners={this.state.partners} />} />\n                    <Route exact path='/directory' render={() => <Directory campsites={this.state.campsites} />} />\n                    <Redirect to='/home' /> \n                </Switch>\n                <Footer />\n            </div>\n        );\n    }\n} \nexport default Main; */\n\n/* Altered because header and footer are now imported as <Header /> and <Footer />\nrender() {\n\n        return (\n            <div>\n                <Navbar dark color=\"primary\">\n                <div className=\"container\">\n                    <NavbarBrand href=\"/\">NuCamp</NavbarBrand>\n                </div>\n                \n                </Navbar> \n                <Directory campsites={this.state.campsites} onClick={campsiteId => this.onCampsiteSelect(campsiteId)} />\n                <CampsiteInfo campsite={ this.state.campsites.filter(campsite => campsite.id === this.state.selectedCampsite)[0]} \n                    comments={this.state.comments} />\n            </div>\n        );\n    } \n}\nafter this App.css is updates using existing styles \n*/","// 1. imported CAMPSITES array from campsites module in shared folder \n\n// Thunk: No longer need to import campsites data because we're getting it from an action \n// -- import { CAMPSITES } from '../shared/campsites';\n// In it's place inport from ation types module \nimport * as ActionTypes from './ActionTypes' \n// Thunk: add three proprerties boolian - isLoading: true, errMess: null, campsites: []\n// initialize them with default function permaeters syntax \nexport const Campsites = (state = {\n        isLoading: true,\n        errMess: null,\n        campsites: []\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_CAMPSITES:\n            return {...state, isLoading: false, errMess: null, campsites: action.payload};\n        case ActionTypes.CAMPSITES_LOADING:\n            return {...state, isLoading: true, errMess: null, campsites: []};\n        case ActionTypes.CAMPSITES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n        default:\n            return state;\n    }\n}; // THUNK: now go to react components \n\n// all reducers take two perameters \n// 2. added reducer function handles each part of the state as a named export \n// a. export const Name = arrow function or function declaration \n// b. all reducers take two perameters = (first, second)\n//    (1st previous STATE = which is also existing / current STATE, \n// the first time a reducer is called the state will not exist \n// we use default function perameter syntax to initialize \n// state part thats use by reducer from import {......} so use CAMPSITES, comma!  \n//     2nd takes an action Object then a SWITCH statement \n// that checks for the type of action and returns it from the STATE switch (action.type)\n// it's not required but common to use the witch statement for this \n// We don't have any action types defined so we set up a default case to return the state\n// This reducer doesn't really do anything except initialize the state if it didn't exist before \n// we'll add more cases to the statement \n// we add the stame initialization to comments, partners, and promotions as well ","\n\n//import { COMMENTS } from '../shared/comments';\n//1. now we cause the reducer to update it's part of the state when the ADD_COMMENT\n// action is dispatched to the store  so we first import it from the ActionTypes.js module \n// by import action types module wth import * wildcard \nimport * as ActionTypes from './ActionTypes';\n//2. now in switch statement set up a case for when the action type is ADD_COMMENT\n// added (case ActionTypes.ADD_COMMENT:)\n//3. inside put content of action payload into a new variable called comment \n//    const comment = action.payload; \n// content of action.payload is an object so you can add more properties to it \n/* \nconst comment = action.payload;\n            comment.id = state.length; <--- length of comments array \n            comment.date = new Date().toISOString(); \n            return state.concat(comment); <-- return a concatination of the \n                   first properties with added properties to the redux store\n*/// NOTE: using push would mutate the array so we must use concat. \nexport const Comments = (state = { errMess: null, comments: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n\n        case ActionTypes.ADD_COMMENT:\n            const comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n};\n\n// 4.a Now we update other React components to hlp dispatch this action \n// we'll import redux/ActionCreators to main component ","export const PARTNERS = [\r\n    {\r\n        id: 0,\r\n        name: \"Bootstrap Outfitters\",\r\n        image: \"/assets/images/bootstrap-logo.png\",\r\n        featured: false,\r\n        description: \"Bootstrap Outfitters supplies you with the gear you need at prices you can't beat.\"\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"Git Out Expeditions\",\r\n        image: \"/assets/images/git-logo.png\",\r\n        featured: false,\r\n        description: \"Join Git Out Expeditions to explore new horizons with a group of other adventurers!\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Mongo Fly Shop\",\r\n        image: \"/assets/images/mongo-logo.png\",\r\n        featured: false,\r\n        description: \"Need a new fishing pole, a tacklebox, or flies of all kinds? Stop by Mongo Fly Shop.\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Node Outdoor Apparel\",\r\n        image: \"/assets/images/node-logo.png\",\r\n        featured: true,\r\n        description: \"From polar fleeces to swimsuits, hiking boots to waders, a visit to Node will be sure to get you covered.\"\r\n    }\r\n]","import { PARTNERS } from '../shared/partners';\n\nexport const Partners = (state = PARTNERS, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstName: '',\n    lastName: '',\n    phoneNum: '',\n    email: '',\n    agree: false,\n    contactType: 'Phone',\n    feedback: ''\n};","// import { PROMOTIONS } from '../shared/promotions';\nimport * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = { isLoading: true,\n                                                errMess: null,\n                                                promotions: [] }, action) => {\n        switch (action.type) {\n        case ActionTypes.ADD_PROMOTIONS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOTIONS_LOADING:\n        return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOTIONS_FAILED:\n        return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n        return state;\n    }\n};","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/MainComponent'; \nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div className=\"App\">\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n\n  /*  constructor(props) { constructor deleted to store state in main component\n        super(props);\n        this.state = {\n            campsites: CAMPSITES\n        };\n    } // Below we moved all the info from the component to MAin component \n    render() {\n        return ( // using browser router \n            <BrowserRouter>\n                <div className=\"App\">\n                    <Main />\n                </div>\n            </BrowserRouter>\n        );\n    } \n} */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* OLD FILE import React, { Component } from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport './App.css';\nimport Directory from './components/DirectoryComponent'; \nimport { CAMPSITES } from './shared/campsites';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            campsites: CAMPSITES\n        };\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <Navbar dark color=\"primary\">\n                <div className=\"container\">\n                    <NavbarBrand href=\"/\">NuCamp</NavbarBrand>\n                </div>\n                \n                </Navbar> \n                <Directory campsites={this.state.campsites} />\n            </div>\n        );\n    } \n}\nexport default App; */","/*\nCombine the reducers\nThe Redux createStore() function requires that all your reducers \nbe combined into one single root reducer to be used as an \nargument to createStore(). You will use the combineReducers() \nfunction for this. Open configureStore.js and update it as follows:\nusing only one . because these are all in the same folder\n\ncombine all reducers as properties \n*/\n//Thunk added apply middleWare as part of thunk \nimport {createStore, combineReducers, applyMiddleware} from 'redux';\n//Thunk logger added import thunk and import logger \nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createForms } from 'react-redux-form';\nimport { Campsites } from './campsites';\nimport { Comments } from './comments';\nimport { Partners } from './partners';\nimport { InitialFeedback } from './forms';\nimport { Promotions } from './promotions';\n//Thunk middleware the add apply middleware function ), applyMiddleware(thunk, logger)\n// Thunk we need to add more code to use thunk / add action types \n// Thunk Go to ActionTypes.js \nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            campsites: Campsites,\n            comments: Comments,\n            partners: Partners,\n            promotions: Promotions,\n            ...createForms({\n                feedbackForm: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};\n\n\n/* old code \nimport { createStore } from 'redux';\nimport { Reducer, initialState } from './reducer';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        Reducer,\n        initialState\n    );\n\n    return store;\n};\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'typeface-lobster';\nimport 'typeface-open-sans';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n// This ReactDOM.render is accessed by index.html \n//      as the final front at <div id=\"root\"></div>\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}